apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapp1
spec:
  replicas: 5
  template:
    metadata:
      labels:
        app: webapp1
    spec:
      containers:
        - name: myapp
          image: tutum/hello-world
          ports:
            - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapp2
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: webapp2
    spec:
      containers:
        - name: myapp
          image: tutum/hello-world
          ports:
            - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: webapp3
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp3
    spec:
      containers:
        - name: myapp
          image: tutum/hello-world
          ports:
            - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: webapp1-service
spec:
  selector:
    app: webapp1  
  ports:
    - protocol: "TCP"
      # Port accessible inside cluster
      port: 8080
      # Port to forward to inside the pod
      targetPort: 80
      # Port accessible outside cluster
      nodePort: 30001
  type: LoadBalancer
---
kind: Service
apiVersion: v1
metadata:
  name: webapp2-service
spec:
  selector:
    app: webapp2 
  ports:
    - protocol: "TCP"
      # Port accessible inside cluster
      port: 8080
      # Port to forward to inside the pod
      targetPort: 80
      # Port accessible outside cluster
      nodePort: 30002
  type: LoadBalancer
---
kind: Service
apiVersion: v1
metadata:
  name: webapp3-service
spec:
  selector:
    app: webapp3 
  ports:
    - protocol: "TCP"
      # Port accessible inside cluster
      port: 8080
      # Port to forward to inside the pod
      targetPort: 80
      # Port accessible outside cluster
      nodePort: 30003
  type: LoadBalancer
